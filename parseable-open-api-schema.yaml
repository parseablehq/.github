openapi: 3.0.0
info:
  title: Log Stream Management
  version: 1.0.0
  description: |-
    The schema contains API for Parseable OSS and Enterprise few of the API end points are only limited to enterprise version. 
servers:
  - url: https://demo.parseable.com/
components:
  securitySchemes:
    basicAuth:
      type: http
      scheme: basic
security:
  - basicAuth: []
paths:
  /api/v1/logstream/{stream_name}:
    put:
      tags:
        - default
      summary: Create a log stream
      requestBody:
        content: {}
      security:
        - basicAuth: []
      parameters:
        - name: stream_name
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    delete:
      tags:
        - default
      summary: Delete a log stream
      security:
        - basicAuth: []
      parameters:
        - name: stream_name
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    post:
      tags:
        - default
      summary: Send logs to a log stream URL
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                - id: 434a5f5e-2f5f-11ed-a261-asdasdafgdfd
                  datetime: 24/Jun/2022:14:12:15 +0000
                  host: 153.10.110.81
                  user-identifier: >-
                    Mozilla/5.0 (Windows NT 6.1; Win64; x64; rv:64.0)
                    Gecko/20100101 Firefox/64.0
                  method: PUT
                  status: 500
                  referrer: http://www.google.com/
      security:
        - basicAuth: []
      parameters:
        - name: stream_name
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/v1/logstream:
    get:
      tags:
        - default
      summary: List all log streams
      security:
        - basicAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/v1/logstream/{stream_name}/schema:
    get:
      tags:
        - default
      summary: Get Schema from the Stream
      security:
        - basicAuth: []
      parameters:
        - name: stream_name
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/v1/logstream/{stream_name}/stats:
    get:
      tags:
        - default
      summary: Get storage stats for a stream
      security:
        - basicAuth: []
      parameters:
        - name: stream_name
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/v1/query:
    post:
      tags:
        - default
      summary: Query a log stream
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                query: select * from {{stream_name}}
                startTime: '2022-09-10T05:00:00+00:00'
                endTime: '2022-09-10T05:32:00+00:00'
      security:
        - basicAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}

  /api/v1/ingest:
    post:
      tags:
        - default
      summary: Send logs to a log stream with HTTP Header
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                - id: 434a5f5e-2f5f-11ed-a261-asdasdafgdfd
                  datetime: 24/Jun/2022:14:12:15 +0000
                  host: 153.10.110.81
                  user-identifier: >-
                    Mozilla/5.0 (Windows NT 6.1; Win64; x64; rv:64.0)
                    Gecko/20100101 Firefox/64.0
                  method: PUT
                  status: 500
                  referrer: http://www.google.com/
      security:
        - basicAuth: []
      parameters:
        - name: X-P-Stream
          in: header
          schema:
            type: string
          example: '{{stream_name}}'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/v1/logstream/{stream_name}/retention:
    put:
      tags:
        - default
      summary: Set retention for a stream
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                - description: delete after 20 days
                  action: delete
                  duration: 1d
      security:
        - basicAuth: []
      parameters:
        - name: stream_name
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    get:
      tags:
        - default
      summary: Get retention for a stream
      security:
        - basicAuth: []
      parameters:
        - name: stream_name
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/v1/user/{user_to_create}:
    post:
      tags:
        - User Management
      summary: Create a user with a role
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                - public
      security:
        - basicAuth: []
      parameters:
        - name: user_to_create
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    delete:
      tags:
        - User Management
      summary: Delete a user
      security:
        - basicAuth: []
      parameters:
        - name: user_to_create
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/v1/user/{user_to_create}/generate-new-password:
    post:
      tags:
        - User Management
      summary: Reset a user's password
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example: ''
      security:
        - basicAuth: []
      parameters:
        - name: user_to_create
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/v1/user:
    get:
      tags:
        - User Management
      summary: List all users
      security:
        - basicAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/v1/user/{user_to_create}/role:
    get:
      tags:
        - User Management
      summary: Get a user's role
      security:
        - basicAuth: []
      parameters:
        - name: user_to_create
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    put:
      tags:
        - default
      summary: Add role to a user
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                - public
                - admin
      security:
        - basicAuth: []
      parameters:
        - name: user_to_create
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/v1/role/{rolename}:
    put:
      tags:
        - Role Management
      summary: Create a role
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                - privilege: writer
                  resource:
                    stream: app
      parameters:
        - name: rolename
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    get:
      tags:
        - Role Management
      summary: Get a role
      parameters:
        - name: rolename
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/v1/role:
    get:
      tags:
        - Role Management
      summary: Get all roles
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/v1/role/default:
    put:
      tags:
        - Role Management
      summary: Set default role
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example: public
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    get:
      tags:
        - Role Management
      summary: Get default role
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}